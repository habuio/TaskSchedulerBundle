services:
    # Scheduler service, that's responsible for scheduling
    # task execution on the configured task producer.
    task_scheduler.scheduler_service:
        class: TaskSchedulerBundle\Service\SchedulerService
        arguments: ['@task_scheduler.producer_locator']

    # Transient task producer, this producer is configured by
    # default and will execute the task within the same
    # request, but otherwise function exactly as a deferred
    # task worker producer.
    task_scheduler.producer.transient:
        class: TaskSchedulerBundle\Producer\TransientProducer
        arguments: ['@task_scheduler.worker']
        tags: ['task_scheduler.producer']

    # Worker class responsible for actually executed
    # the deferred tasks.
    task_scheduler.worker:
        class: TaskSchedulerBundle\Worker\Worker
        arguments: ['@task_scheduler.task_locator']

    # Service locator for tasks. Tasks automatically get
    # stored in this locator if they have the service
    # tag 'task_scheduler.task' appended.
    task_scheduler.task_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']

    # Service locator for producers. Producers automatically
    # get stored in this locator if they have the service
    # tag 'task_scheduler.producer' appended.
    task_scheduler.producer_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']